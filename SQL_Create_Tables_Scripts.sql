USE hdo488 -- select database
GO

-- Drop table if it already exitsted
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TBranch')) DROP TABLE TBranch 
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TCustomer')) DROP TABLE TCustomer 
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TAccount')) DROP TABLE TAccount
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TTransaction')) DROP TABLE TTransaction
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TLoan')) DROP TABLE TLoan
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TLoanPaymemnt')) DROP TABLE TLoanPaymemnt
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TEmployee')) DROP TABLE TEmployee
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TWorkingAt')) DROP TABLE TWorkingAt


-- Create Tables


CREATE TABLE TBranch (
	BranchID INT IDENTITY,
	Name NVARCHAR(100) NOT NULL UNIQUE,
	IsOffice INT DEFAULT 0, -- 0 is branch, -- 1 is office
	CityName NVARCHAR(100) NOT NULL,
	CONSTRAINT PK_Branch PRIMARY KEY (BranchID)
)
GO

CREATE TABLE TEmployee (
	EmployeeID INT IDENTITY,
	StartDate DATETIME2 NOT NULL DEFAULT GETDATE(),
	Name NVARCHAR(100) NOT NULL,
	Position NVARCHAR(100) NOT NULL,
	IsManagedBy NVARCHAR(100) NOT NULL,
	HomeAdrress NVARCHAR(100) NOT NULL,
	CONSTRAINT PK_Employee PRIMARY KEY (EmployeeID)
)
GO

CREATE TABLE TCustomer (
	CustomerID INT IDENTITY,
	Name NVARCHAR(100) NOT NULL,
	HomeAdrress NVARCHAR(100) NOT NULL,
	PersonalRepresentative NVARCHAR(100),
	EmployeeID INT FOREIGN KEY REFERENCES TEmployee(EmployeeID), -- To know who is loan officer of customer
	CONSTRAINT PK_Customer PRIMARY KEY (CustomerID)
)
GO

CREATE TABLE TAccount (
	AccountID INT IDENTITY,
	AccountNumber INT UNIQUE,
	CustomerID INT FOREIGN KEY REFERENCES TCustomer(CustomerID),
	BranchID INT FOREIGN KEY REFERENCES TBranch(BranchID),
	CurrentBalance MONEY NOT NULL DEFAULT 0,
	Type NVARCHAR(80) NOT NULL,
	MinimumRequiredBalance MONEY DEFAULT 500,
	InterestRate FLOAT NOT NULL,
	MonthlyServiceFee MONEY NOT NULL,
	CONSTRAINT PK_Account PRIMARY KEY (AccountID),
)
GO

CREATE TABLE TTransaction (
	TransactionID INT IDENTITY,
	AccountID INT FOREIGN KEY REFERENCES TAccount(AccountID),
	Amount MONEY NOT NULL,
	Type NVARCHAR(100) NOT NULL,
	TransactionDate DATETIME2 NOT NULL DEFAULT GETDATE(),
	CheckNumber INT, -- only for checking acc and withdrawals
	CONSTRAINT PK_Transaction PRIMARY KEY (TransactionID)
)
GO

CREATE TABLE TLoan (
	LoanID INT IDENTITY,
	CustomerID INT FOREIGN KEY REFERENCES TCustomer(CustomerID),
	BranchID INT FOREIGN KEY REFERENCES TBranch(BranchID),
	Kind NVARCHAR(100) NOT NULL,
	Amount MONEY NOT NULL,
	CONSTRAINT PK_Loan PRIMARY KEY (LoanID)
)
GO

CREATE TABLE TLoanPaymemnt (
	PaymentNumber INT NOT NULL,
	LoanID INT FOREIGN KEY REFERENCES TLoan(LoanID),
	MonthlyPaymentDate DATETIME2 NOT NULL DEFAULT GETDATE(),
	Amount MONEY NOT NULL,
	CONSTRAINT PK_LoanPayment PRIMARY KEY (PaymentNumber, LoanID)
)
GO

CREATE TABLE TWorkingAt (
	EmployeeID INT FOREIGN KEY REFERENCES TEmployee(EmployeeID),
	BranchID INT FOREIGN KEY REFERENCES TBranch(BranchID),
	CONSTRAINT PK_WorkingAt PRIMARY KEY (EmployeeID, BranchID)
)
GO